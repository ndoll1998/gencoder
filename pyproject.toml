[project]
name = "gencoder"
dynamic = ["version"]
description = "TODO"
readme = "README.md"
classifiers = []
requires-python = ">=3.10"
dependencies = [
    "hyped==0.2.0a0",
    "torch==2.4.0",
    "datasets==2.21.0",
    "transformers@git+https://github.com/hackyon/transformers.git@sdpa-roberta",
    "accelerate==0.33.0",
    "huggingface-hub==0.24.5",
    "hf-transfer==0.1.8",
    "typer==0.12.4",
    "wandb==0.17.1"
]

[project.scripts]
gencoder = "gencoder.cli:app"

[project.optional-dependencies]
linting = ["pre-commit"]
tests = ["pytest", "pytest-cov"]

[build-system]
requires = ["setuptools >= 61.0.0", "setuptools_scm>=8.0.0"]
build-backend = "setuptools.build_meta"

[tool.coverage.report]
ignore_errors = true
omit = ["tests/*", "src/gencoder/__version__.py"]
# Regexes for lines to exclude from consideration
exclude_also = [
    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self\\.debug",

    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",

    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",

    # Don't complain about abstract methods, they aren't run:
    "@(abc\\.)?abstractmethod",

    # Don't complain about overloaded functions
    "@(typing\\.)?overload",
    "pragma: not covered"
]

[tool.setuptools_scm]
version_file = "src/gencoder/__version__.py"

[tool.black]
target-version = ["py311"]
line-length = 79
docstring-style = "google"

[tool.isort]
profile = "black"
line_length = 79

[tool.ruff]
line-length = 79
# check docstrings
ignore = ["E741"]

[tool.ruff.pydocstyle]
convention = "google"

[tool.ruff.per-file-ignores]
# Don't check docstrings of `tests` and `docs`
"tests/**" = ["D"]
"docs/**" = ["D"]
